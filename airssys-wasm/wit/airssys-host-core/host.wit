package airssys:host-core@1.0.0;

/// Host services interface - core services available to all components
interface host-services {
    use airssys:component-core/types.{
        component-id, 
        request-id, 
        component-metadata, 
        component-error, 
        messaging-error, 
        log-level
    };
    
    /// Structured logging with context
    log: func(
        level: log-level,
        message: string,
        context: option<list<tuple<string, string>>>
    );
    
    /// Send one-way message to another component
    send-message: func(
        target: component-id,
        message: list<u8>
    ) -> result<_, messaging-error>;
    
    /// Send request expecting callback response
    send-request: func(
        target: component-id,
        request: list<u8>,
        timeout-ms: u64
    ) -> result<request-id, messaging-error>;
    
    /// Cancel pending request before timeout
    cancel-request: func(
        request-id: request-id
    ) -> result<_, messaging-error>;
    
    /// Time and timing services
    current-time-millis: func() -> u64;
    sleep-millis: func(duration: u64);
    
    /// Component introspection
    list-components: func() -> list<component-id>;
    get-component-metadata: func(id: component-id) -> result<component-metadata, component-error>;
}
