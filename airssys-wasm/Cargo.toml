[package]
name = "airssys-wasm"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

[dependencies]
# Serialization (workspace dependency - §5.1)
serde = { workspace = true }

# Error handling (workspace dependency - §5.1)
thiserror = { workspace = true }

# Time handling - chrono DateTime<Utc> standard (§3.2)
chrono = { workspace = true }

# Async traits for storage, messaging, runtime interfaces (§5.1)
async-trait = { workspace = true }

# JSON serialization for Custom capability parameters (§5.1)
serde_json = { workspace = true }

# UUID for message IDs in actor.rs (§5.1)
uuid = { workspace = true }

# Tokio for async tests in security.rs and future modules
tokio = { workspace = true, features = ["macros", "rt", "fs"] }

# Wasmtime runtime dependencies (WASM-TASK-002 Phase 1)
wasmtime = { version = "24.0", features = ["component-model", "async", "cranelift"] }
wasmtime-wasi = { version = "24.0" }

# Anyhow for Wasmtime ResourceLimiter trait (required by wasmtime API)
anyhow = { workspace = true }

# TOML parsing for Component.toml configuration (WASM-TASK-002 Phase 2)
toml = { workspace = true }

[dev-dependencies]
# WAT compiler for test fixtures
wat = "1.0"

# Temporary file/directory management for integration tests
tempfile = "3.8"

# Criterion for benchmarking
criterion = { version = "0.5", features = ["async_tokio", "html_reports"] }

# Resource-conscious benchmark configuration
[[bench]]
name = "instantiation_benchmarks"
harness = false

[[bench]]
name = "execution_benchmarks"
harness = false

[[bench]]
name = "memory_benchmarks"
harness = false

[[bench]]
name = "crash_handling_benchmarks"
harness = false

[lints]
workspace = true